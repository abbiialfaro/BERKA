// <auto-generated />
using System;
using BERKA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BERKA.Migrations
{
    [DbContext(typeof(BERKAcontext))]
    [Migration("20250424183216_InitialFixed")]
    partial class InitialFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BERKA.Models.Cita", b =>
                {
                    b.Property<int>("ID_Cita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cita"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("ID_Inspector")
                        .HasColumnType("int");

                    b.Property<int>("ID_Vehiculo")
                        .HasColumnType("int");

                    b.HasKey("ID_Cita");

                    b.HasIndex("ID_Cliente");

                    b.HasIndex("ID_Inspector");

                    b.HasIndex("ID_Vehiculo");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("BERKA.Models.Cliente", b =>
                {
                    b.Property<int>("ID_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tipo_Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID_Cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BERKA.Models.Combustible", b =>
                {
                    b.Property<int>("ID_Tip_Comb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tip_Comb"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID_Tip_Comb");

                    b.ToTable("Combustibles");
                });

            modelBuilder.Entity("BERKA.Models.Detalle_Revision", b =>
                {
                    b.Property<int>("ID_Detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Detalle"));

                    b.Property<int>("ID_Rev")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID_Detalle");

                    b.ToTable("Detalle_Revisiones");
                });

            modelBuilder.Entity("BERKA.Models.Estacion", b =>
                {
                    b.Property<int>("ID_Estacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID_Estacion");

                    b.ToTable("Estaciones");
                });

            modelBuilder.Entity("BERKA.Models.Inspector", b =>
                {
                    b.Property<int>("ID_Inspector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Inspector"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Estacion")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID_Inspector");

                    b.ToTable("Inspectores");
                });

            modelBuilder.Entity("BERKA.Models.Pago", b =>
                {
                    b.Property<int>("ID_Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Pago"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("ID_Cita")
                        .HasColumnType("int");

                    b.Property<int>("ID_Rev")
                        .HasColumnType("int");

                    b.Property<int>("ID_Vehiculo")
                        .HasColumnType("int");

                    b.Property<string>("Metodo_Pago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ID_Pago");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("BERKA.Models.Revision", b =>
                {
                    b.Property<int>("ID_Rev")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Rev"));

                    b.Property<DateTime>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Cita")
                        .HasColumnType("int");

                    b.Property<int>("ID_Vehiculo")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Rev");

                    b.HasIndex("ID_Cita");

                    b.ToTable("Revisiones");
                });

            modelBuilder.Entity("BERKA.Models.Tipos_Placa", b =>
                {
                    b.Property<int>("ID_Tip_Placa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tip_Placa"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Registro")
                        .HasColumnType("int");

                    b.HasKey("ID_Tip_Placa");

                    b.ToTable("Tipos_Placas");
                });

            modelBuilder.Entity("BERKA.Models.Tipos_Vehiculo", b =>
                {
                    b.Property<int>("ID_Tipo_Vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tipo_Vehiculo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID_Tipo_Vehiculo");

                    b.ToTable("Tipos_Vehiculos");
                });

            modelBuilder.Entity("BERKA.Models.Vehiculo", b =>
                {
                    b.Property<int>("ID_Vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Vehiculo"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("tip_Combustible")
                        .HasColumnType("int");

                    b.HasKey("ID_Vehiculo");

                    b.HasIndex("ID_Cliente");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("BERKA.Models.Cita", b =>
                {
                    b.HasOne("BERKA.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERKA.Models.Inspector", "Inspector")
                        .WithMany()
                        .HasForeignKey("ID_Inspector")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERKA.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("ID_Vehiculo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Inspector");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BERKA.Models.Revision", b =>
                {
                    b.HasOne("BERKA.Models.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("ID_Cita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("BERKA.Models.Vehiculo", b =>
                {
                    b.HasOne("BERKA.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
